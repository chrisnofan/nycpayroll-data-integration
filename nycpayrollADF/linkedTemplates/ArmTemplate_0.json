{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nycpayrollADF"
		},
		"ADLS_LinkedStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_LinkedStorage'"
		},
		"AzureSqlAggregate_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlAggregate_LS'"
		},
		"AzureSqlDB_LinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDB_LinkedService'"
		},
		"nycpayroll_source_LinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'nycpayroll_source_LinkedService'"
		},
		"ADLS_LinkedStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nycpayrollsa.dfs.core.windows.net/"
		},
		"AzureSqlAggregate_LS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "nycpayroll.database.windows.net"
		},
		"AzureSqlAggregate_LS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "nycpayrollDB"
		},
		"AzureSqlAggregate_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sql_admin"
		},
		"AzureSqlDB_LinkedService_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "nycpayroll.database.windows.net"
		},
		"AzureSqlDB_LinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "nycpayrollDB"
		},
		"AzureSqlDB_LinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sql_admin"
		},
		"nycpayroll_source_LinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nycpayrollsa.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_LinkedStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_LinkedStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_LinkedStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlAggregate_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlAggregate_LS_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlAggregate_LS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlAggregate_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlAggregate_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDB_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDB_LinkedService_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDB_LinkedService_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDB_LinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDB_LinkedService_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycpayroll_source_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('nycpayroll_source_LinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('nycpayroll_source_LinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlAggregate_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stg",
					"table": "nycpayrollaggregate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlAggregate_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlAggregate_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "PROD",
					"table": "nycpayrollaggregate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlAggregate_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycpayroll2020_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDB_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "nvarchar"
					},
					{
						"name": "PayrollNumber",
						"type": "nvarchar"
					},
					{
						"name": "AgencyID",
						"type": "nvarchar"
					},
					{
						"name": "AgencyName",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeID",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "nvarchar"
					},
					{
						"name": "WorkLocationBorough",
						"type": "nvarchar"
					},
					{
						"name": "TitleCode",
						"type": "nvarchar"
					},
					{
						"name": "TitleDescription",
						"type": "nvarchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "nvarchar"
					},
					{
						"name": "BaseSalary",
						"type": "nvarchar"
					},
					{
						"name": "PayBasis",
						"type": "nvarchar"
					},
					{
						"name": "RegularHours",
						"type": "nvarchar"
					},
					{
						"name": "RegularGrossPaid",
						"type": "nvarchar"
					},
					{
						"name": "OTHours",
						"type": "nvarchar"
					},
					{
						"name": "TotalOTPaid",
						"type": "nvarchar"
					},
					{
						"name": "TotalOtherPay",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "nycpayroll_2020"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDB_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycpayroll2021_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDB_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "nvarchar"
					},
					{
						"name": "PayrollNumber",
						"type": "nvarchar"
					},
					{
						"name": "AgencyCode",
						"type": "nvarchar"
					},
					{
						"name": "AgencyName",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeID",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "nvarchar"
					},
					{
						"name": "WorkLocationBorough",
						"type": "nvarchar"
					},
					{
						"name": "TitleCode",
						"type": "nvarchar"
					},
					{
						"name": "TitleDescription",
						"type": "nvarchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "nvarchar"
					},
					{
						"name": "BaseSalary",
						"type": "nvarchar"
					},
					{
						"name": "PayBasis",
						"type": "nvarchar"
					},
					{
						"name": "RegularHours",
						"type": "nvarchar"
					},
					{
						"name": "RegularGrossPaid",
						"type": "nvarchar"
					},
					{
						"name": "OTHours",
						"type": "nvarchar"
					},
					{
						"name": "TotalOTPaid",
						"type": "nvarchar"
					},
					{
						"name": "TotalOtherPay",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "STG",
					"table": "nycpayroll_2021"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDB_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycpayrollMetaData_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_LinkedStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "nycpayroll-source-files"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_LinkedStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycpayroll_source_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_LinkedStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "nycpayroll-source-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_LinkedStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycpayroll_staging_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDB_LinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "STG",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDB_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggregage_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "nycpayroll2020_DS",
								"type": "DatasetReference"
							},
							"name": "nycpayroll2020"
						},
						{
							"dataset": {
								"referenceName": "nycpayroll2021_DS",
								"type": "DatasetReference"
							},
							"name": "nycpayroll2021"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "Aggregate"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as integer,",
						"          AgencyName as string,",
						"          EmployeeID as integer,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as string,",
						"          WorkLocationBorough as string,",
						"          TitleCode as integer,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as float,",
						"          PayBasis as string,",
						"          RegularHours as float,",
						"          RegularGrossPaid as float,",
						"          OTHours as float,",
						"          TotalOTPaid as float,",
						"          TotalOtherPay as float",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> nycpayroll2020",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as integer,",
						"          AgencyName as string,",
						"          EmployeeID as integer,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as string,",
						"          WorkLocationBorough as string,",
						"          TitleCode as integer,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as float,",
						"          PayBasis as string,",
						"          RegularHours as float,",
						"          RegularGrossPaid as float,",
						"          OTHours as float,",
						"          TotalOTPaid as float,",
						"          TotalOtherPay as float",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> nycpayroll2021",
						"nycpayroll2020, nycpayroll2021 union(byName: true)~> union1",
						"filter1 aggregate(groupBy(FiscalYear,",
						"          AgencyName),",
						"     AggRegularGrossPaid = sum(RegularGrossPaid),",
						"          AggTotalOTPaid = sum(TotalOTPaid),",
						"          AggTotalOtherPay = sum(TotalOtherPay),",
						"          TotalPaid = sum(RegularGrossPaid) + sum(TotalOTPaid) + sum(TotalOtherPay)) ~> aggregate1",
						"union1 filter(FiscalYear >= 2020) ~> filter1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Aggregate"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/nycpayroll2020_DS')]",
				"[concat(variables('factoryId'), '/datasets/nycpayroll2021_DS')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycparoll_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get nycpayroll filenames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "nycpayrollMetaData_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Loop through source files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get nycpayroll filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get nycpayroll filenames').output.childItems",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "copy nycpayroll to staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "nycpayroll_source_DS",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nycpayroll_staging_DS",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@split(item().name, '.')[0]",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Loop through source files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Aggregage_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"nycpayroll2020": {},
									"nycpayroll2021": {},
									"Aggregate": {}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-31T23:12:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/nycpayrollMetaData_DS')]",
				"[concat(variables('factoryId'), '/dataflows/Aggregage_DF')]",
				"[concat(variables('factoryId'), '/datasets/nycpayroll_source_DS')]",
				"[concat(variables('factoryId'), '/datasets/nycpayroll_staging_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Aggregage_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"nycpayroll2020": {},
									"nycpayroll2021": {},
									"Aggregate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-31T23:12:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Aggregage_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycpayroll Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This triggers the pipeline",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "nycparoll_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 12,
						"startTime": "2024-09-01T01:06:00",
						"endTime": "2024-09-02T01:06:00",
						"timeZone": "GMT Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/nycparoll_pipeline')]"
			]
		}
	]
}